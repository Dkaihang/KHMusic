{"version":3,"sources":["webpack:///src/pages/detail/SongDetail.vue","webpack:///./src/pages/detail/SongDetail.vue?6820","webpack:///./src/pages/detail/SongDetail.vue","webpack:///src/components/MusicPlay.vue","webpack:///./src/components/MusicPlay.vue?a3dc","webpack:///./src/components/MusicPlay.vue"],"names":["SongDetail","name","data","code","status","components","MusicNoData","MusicPlay","methods","getSongInfo","that","this","api","$route","params","rid","then","res","parseInt","$store","commit","catch","getSongLrc","lrclist","getSongUrl","getPlayUrl","mid","type","url","imgError","event","currentTarget","src","onerror","computed","extends_default","Object","vuex_esm","watch","isLrc","handler","newVal","oldVal","$refs","lrc","scrollTop","curTime","i","lrcList","length","parseFloat","time","created","mounted","detail_SongDetail","render","_vm","_h","$createElement","_c","_self","staticClass","_v","style","backgroundImage","songInfo","pic","attrs","on","error","$event","_s","artist","album","releaseDate","ref","_l","key","item","index","class","active","lineLyric","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","MusicTable","mixins","playTime","isShow","playMode","isVolume","defaultImg","tempVolume","realVolume","playList","setPlayOrPause","isPlay","audioEnd","storage","getLocalStorage","Math","floor","random","setLocalStorage","download","window","location","href","songUrl","setVolume","audio","volume","floatToTime","val","min","sec","timeUpdate","currentTime","progress","duration","progressMove","scrollx","document","documentElement","scrollLeft","body","x","clientX","getBoundingClientRect","left","_x","progressBtnMove","_this","onmousemove","_x2","onmouseup","getPreSong","getNextSong","setTimeout","play","pause","_this2","onscroll","sl","onclick","contains","target","playListBtn","beforeDestroy","components_MusicPlay","id","no_list","staticStyle","width","height","position","z-index","_e","title","click","goPlayPage","goPage","songTimeMinutes","mousedown","directives","rawName","value","expression","_m","songList","playFunc","scopedSlots","_u","fn","proxy","timeupdate","ended"],"mappings":"wNA0CAA,GACAC,KAAA,aACAC,KAFA,WAGA,OACAC,KAAA,EACAC,OAAA,IAIAC,YACAC,cAAA,EACAC,YAAA,GAKAC,SACAC,YADA,WAEA,IAAAC,EAAAC,KACMC,EAAA,EAANH,YAAAE,KAAAE,OAAAC,OAAAC,KACAC,KAAA,SAAAC,GACAP,EAAAP,KAAAe,SAAAD,EAAAd,MACAO,EAAAS,OAAAC,OAAA,cAAAH,EAAAf,QAEAmB,MAAA,cACMT,EAAA,EAANU,WAAAX,KAAAE,OAAAC,OAAAC,KACAC,KAAA,SAAAC,GACAP,EAAAN,OAAAc,SAAAD,EAAAb,QACAM,EAAAS,OAAAC,OAAA,aAAAH,EAAAf,KAAAqB,WAEAF,MAAA,eAEAG,WAhBA,WAiBA,IAAAd,EAAAC,KACMC,EAAA,EAANa,YAAAC,IAAAf,KAAAE,OAAAC,OAAAC,IAAAY,KAAA,UACAX,KAAA,SAAAC,GAEAP,EAAAS,OAAAC,OAAA,aAAAH,EAAAf,KAAA0B,OAEAP,MAAA,eAEAQ,SAzBA,SAyBAC,GACAA,EAAAC,cAAAC,IAAA,6GACAF,EAAAC,cAAAE,QAAA,OAKAC,SAAYC,OACZC,OAAAC,EAAA,EAAAD,EACA,QACA,UACA,UACA,cAGAE,OACAC,OACAC,QADA,SACAC,EAAAC,GACA/B,KAAAgC,MAAAC,IAEAC,UAAA,GAAAJ,IAKAK,SACAN,QADA,SACAC,EAAAC,GACA,QAAAK,EAAA,EAAAA,EAAApC,KAAAqC,QAAAC,OAAA,EAAAF,IACAG,WAAAvC,KAAAqC,QAAAD,GAAAI,OAAAV,EAAA,IAAAS,WAAAvC,KAAAqC,QAAAD,EAAA,GAAAI,OAAAV,EAAA,IACA9B,KAAAQ,OAAAC,OAAA,WAAA2B,GAGAG,WAAAvC,KAAAqC,QAAArC,KAAAqC,QAAAC,OAAA,GAAAE,OAAAV,EAAA,IACA9B,KAAAQ,OAAAC,OAAA,WAAAT,KAAAqC,QAAAC,OAAA,MAOAG,QAjFA,WAkFAzC,KAAAF,cACAE,KAAAa,aACAb,KAAAQ,OAAAC,OAAA,iBAIAiC,QAxFA,cCvCeC,GADEC,OAFjB,WAA0B,IAAAC,EAAA7C,KAAa8C,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,SAAmBF,EAAA,OAAYE,YAAA,YAAsBL,EAAAM,GAAA,KAAAH,EAAA,OAAwBE,YAAA,KAAAE,OAAyBC,gBAAA,OAAAR,EAAAS,SAAAC,IAAA,OAA+CV,EAAAM,GAAA,KAAAH,EAAA,OAAwBE,YAAA,aAAuBF,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAgCE,YAAA,SAAmBF,EAAA,OAAYE,YAAA,cAAwBF,EAAA,OAAYE,YAAA,MAAAM,OAAyBnC,IAAAwB,EAAAS,SAAAC,KAAA,aAAoCE,IAAKC,MAAA,SAAAC,GAAyB,OAAAd,EAAA3B,SAAAyC,SAA8Bd,EAAAM,GAAA,KAAAH,EAAA,OAAAA,EAAA,QAAqCE,YAAA,UAAoBL,EAAAM,GAAAN,EAAAe,GAAAf,EAAAS,SAAAhE,SAAAuD,EAAAM,GAAA,KAAAH,EAAA,KAA0DE,YAAA,kBAA4BF,EAAA,QAAAH,EAAAM,GAAAN,EAAAe,GAAAf,EAAAS,SAAAO,aAAAhB,EAAAM,GAAA,KAAAH,EAAA,KAAyEE,YAAA,cAAwBF,EAAA,QAAAH,EAAAM,GAAA,SAAAN,EAAAM,GAAA,KAAAH,EAAA,QAAoDE,YAAA,eAAyBL,EAAAM,GAAAN,EAAAe,GAAAf,EAAAS,SAAAQ,UAAAjB,EAAAM,GAAA,KAAAH,EAAA,QAAAH,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAAH,EAAA,QAAuGE,YAAA,SAAmBL,EAAAM,GAAAN,EAAAe,GAAAf,EAAAS,SAAAS,wBAAAlB,EAAAM,GAAA,KAAAH,EAAA,OAA2EgB,IAAA,MAAAd,YAAA,QAA4BL,EAAAoB,GAAA,WAAA7B,GAAyB,OAAAY,EAAA,KAAekB,IAAA,SAAA9B,MAAiBS,EAAAM,GAAA,KAAAN,EAAAoB,GAAApB,EAAA,iBAAAsB,EAAAC,GAAwD,OAAApB,EAAA,KAAekB,IAAAE,EAAAC,OAAiBC,OAAAzB,EAAAjB,QAAAwC,KAA0BvB,EAAAM,GAAAN,EAAAe,GAAAO,EAAAI,gBAAmC1B,EAAAM,GAAA,KAAAN,EAAAoB,GAAA,WAAA7B,GAAqC,OAAAY,EAAA,KAAekB,IAAA,QAAA9B,OAAgB,UAEzyCoC,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,CACEtF,EACAsD,GATF,EAVA,SAAAiC,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB,oHCiEhC7E,GACAF,YAAAoF,qBAAA,GACAxF,KAAA,YACAyF,UAAA,GACAxF,KAJA,WAKA,OAEAyF,SAAA,QACAC,QAAA,EACAC,SAAA,EACAC,UAAA,EACAC,WAAAV,EAAA,QACAW,WAAA,EACAC,WAAA,GACAC,YACAnB,MAAA,IAGA3B,QAlBA,aAqBA5C,SACA2F,eADA,WAEAxF,KAAAQ,OAAAC,OAAA,aAAAT,KAAAyF,SAKAC,SAPA,WAYA,OADA1F,KAAAoE,MAAAuB,EAAA,EAAAC,gBAAA,mBACA5F,KAAAkF,UAEA,OACAlF,KAAAoE,OAAA,EACApE,KAAAoE,OAAApE,KAAAuF,SAAAjD,SACAtC,KAAAoE,MAAA,GAEApE,KAAAF,YAAAE,KAAAoE,OACA,MAEA,OAAApE,KAAAF,YAAAE,KAAAoE,OAAA,MAEA,OACApE,KAAAoE,OAAA,EACApE,KAAAoE,OAAApE,KAAAuF,SAAAjD,SACAtC,KAAAoE,MAAApE,KAAAuF,SAAAjD,OAAA,EACAtC,KAAAQ,OAAAC,OAAA,iBAEA,MAEA,OAEAT,KAAAoE,MAAAyB,KAAAC,MAAAD,KAAAE,SAAA/F,KAAAuF,SAAAjD,QACAtC,KAAAF,YAAAE,KAAAoE,OAIMuB,EAAA,EAANK,gBAAA,kBAAAhG,KAAAoE,QAGA6B,SA1CA,WA4CAC,OAAAC,SAAAC,KAAApG,KAAAqG,SAEAC,UA9CA,WA+CA,IAAAC,EAAAvG,KAAAgC,MAAAuE,MACAvG,KAAAmF,UAAAnF,KAAAmF,SACAnF,KAAAmF,UAMAnF,KAAAsF,WAAAtF,KAAAqF,WACQM,EAAA,EAARK,gBAAA,SAAAhG,KAAAqF,cANArF,KAAAqF,WAAAM,EAAA,EAAAC,gBAAA,UACA5F,KAAAsF,WAAA,EACQK,EAAA,EAARK,gBAAA,aAMAO,EAAAC,OAAA,IAAAxG,KAAAsF,YAEAmB,YA5DA,SA4DAC,GACA,IAAAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAlE,OAAA,EAWA,OATAA,EADAmE,EAAA,GACA,IAAAA,EAAA,IAEAA,EAAA,IAGAnE,GADAoE,EAAA,GACA,IAAAA,EAEAA,GAIAC,WA5EA,WA6EA,IAAAN,EAAAvG,KAAAgC,MAAAuE,MACAvG,KAAAgF,SAAAhF,KAAAyG,YAAAF,EAAAO,aACAP,EAAAC,OAAA,IAAAxG,KAAAsF,WAEAtF,KAAAgC,MAAA+E,SAAA3D,MAAA,SAAAmD,EAAAO,aAAAP,EAAAS,SAAA,UACAhH,KAAAQ,OAAAC,OAAA,aAAA8F,EAAAO,aAEAP,EAAAO,aAAA,GACA9G,KAAAQ,OAAAC,OAAA,eAIAwG,aAzFA,SAyFA9F,EAAAH,GACA,IAAAkG,EAAAC,SAAAC,gBAAAC,YAAAF,SAAAG,KAAAD,WACAd,EAAAvG,KAAAgC,MAAAuE,MAEA,cAAAvF,EAAA,CACA,IAAAuG,EAAApG,EAAAqG,QAAAN,EAAAlH,KAAAgC,MAAAwE,OAAAiB,wBAAAC,KAEAnB,EAAAC,OAAA,IAAAe,EACAvH,KAAAsF,WAAA,EAAAiC,EACQ5B,EAAA,EAARK,gBAAA,SAAAhG,KAAAsF,YACAtF,KAAAgC,MAAAwE,OAAApD,MAAA,SAAAmE,EAAA,KAEA,gBAAAvG,EAAA,CACA,IAAA2G,EAAAxG,EAAAqG,QAAAN,EAAAlH,KAAAgC,MAAA+E,SAAAU,wBAAAC,KAEAnB,EAAAO,YAAAa,GAAApB,EAAAS,SAAA,OAMAY,gBA9GA,SA8GA5G,GAAA,IAAA6G,EAAA7H,KAEAkH,EAAAC,SAAAC,gBAAAC,YAAAF,SAAAG,KAAAD,WAIAd,EALAvG,KAKAgC,MAAAuE,MACAY,SAAAW,YAAA,SAAA3G,GACA,cAAAH,EAAA,CACA,IAAAuG,EAAApG,EAAAqG,QAAAN,EAAAW,EAAA7F,MAAAwE,OAAAiB,wBAAAC,KACAH,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,GAGAhB,EAAAC,OAAA,IAAAe,EACAM,EAAAvC,WAAA,EAAAiC,EACU5B,EAAA,EAAVK,gBAAA,SAAA6B,EAAAvC,YACAuC,EAAA7F,MAAAwE,OAAApD,MAAA,SAAAmE,EAAA,KAEA,gBAAAvG,EAAA,CACA,IAAA+G,EAAA5G,EAAAqG,QAAAN,EAAAW,EAAA7F,MAAA+E,SAAAU,wBAAAC,KACAK,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,GAGAxB,EAAAO,YAAAiB,GAAAxB,EAAAS,SAAA,OAKAG,SAAAa,UAAA,SAAA7G,GACAgG,SAAAW,YAAA,KACAX,SAAAa,UAAA,OAIAlI,YAtJA,SAsJAsE,GACA,IAAArE,EAAAC,KAEAA,KAAAQ,OAAAC,OAAA,gBACAT,KAAAQ,OAAAC,OAAA,cAAAkF,EAAA,EAAAC,gBAAA,aAAAxB,IACApE,KAAAQ,OAAAC,OAAA,cAAAT,KAAAuF,SAAAnB,GAAAhE,KACMH,EAAA,EAANa,YAAAC,IAAA4E,EAAA,EAAAC,gBAAA,aAAAxB,GAAAhE,IAAAY,KAAA,UACAX,KAAA,SAAAC,GAEAP,EAAAS,OAAAC,OAAA,aAAAH,EAAAf,KAAA0B,KACAlB,EAAAS,OAAAC,OAAA,kBAEAC,MAAA,eAEAuH,WApKA,WAqKAjI,KAAAoE,MAAAuB,EAAA,EAAAC,gBAAA,sBAEA,IAAA5F,KAAAkF,SAEAlF,KAAAoE,MAAAyB,KAAAC,MAAAD,KAAAE,SAAA/F,KAAAuF,SAAAjD,SAEAtC,KAAAoE,OAAA,EACApE,KAAAoE,MAAA,IACApE,KAAAoE,MAAApE,KAAAuF,SAAAjD,OAAA,IAEMqD,EAAA,EAANK,gBAAA,kBAAAhG,KAAAoE,OACApE,KAAAF,YAAAE,KAAAoE,QAEA8D,YAlLA,WAmLAlI,KAAAoE,MAAAuB,EAAA,EAAAC,gBAAA,sBACA,IAAA5F,KAAAkF,SAEAlF,KAAAoE,MAAAyB,KAAAC,MAAAD,KAAAE,SAAA/F,KAAAuF,SAAAjD,SAEAtC,KAAAoE,OAAA,EACApE,KAAAoE,OAAApE,KAAAuF,SAAAjD,SACAtC,KAAAoE,MAAA,IAEMuB,EAAA,EAANK,gBAAA,kBAAAhG,KAAAoE,OACApE,KAAAF,YAAAE,KAAAoE,SAGA7C,SAAYC,OACZC,OAAAC,EAAA,EAAAD,EACA,WACA,UACA,YAGAE,OACA8D,QACA5D,QADA,SACAC,EAAAC,GACA,IAAAwE,EAAAvG,KAAAgC,MAAAuE,OAEA,IAAAzE,EAIAqG,WAAA,WACA5B,EAAA6B,QACA,KAEA7B,EAAA8B,QAEArI,KAAAuF,SAAAI,EAAA,EAAAC,gBAAA,gBAIAlD,QA/OA,WA+OA,IAAA4F,EAAAtI,KACAD,EAAAC,KAEAkG,OAAAqC,SAAA,WACA,IAAAC,IAAArB,SAAAC,gBAAAC,YAAAF,SAAAG,KAAAD,YACAtH,EAAAiC,MAAAoG,KAAAhF,MAAAsE,KAAAc,EAAA,MAEAtC,OAAAuC,QAAA,SAAAtH,GAEAmH,EAAAtG,MAAAuD,SAAAmD,SAAAvH,EAAAwH,SAAAL,EAAAtG,MAAA4G,YAAAF,SAAAvH,EAAAwH,UACAL,EAAArD,QAAA,IAGAjF,KAAAQ,OAAAC,OAAA,gBACA,OAAAkF,EAAA,EAAAC,gBAAA,WACAD,EAAA,EAAAK,gBAAA,aACAhG,KAAAgC,MAAAuE,MAAAC,OAAA,IAAAb,EAAA,EAAAC,gBAAA,UACA5F,KAAAsF,WAAAK,EAAA,EAAAC,gBAAA,UACA,MAAAD,EAAA,EAAAC,gBAAA,mBACA5F,KAAAoE,MAAAuB,EAAA,EAAAC,gBAAA,mBAEMD,EAAA,EAANK,gBAAA,qBAEA,MAAAL,EAAA,EAAAC,gBAAA,eAEA5F,KAAAuF,SAAAI,EAAA,EAAAC,gBAAA,aACA5F,KAAAQ,OAAAC,OAAA,cAAAT,KAAAuF,SAAAvF,KAAAoE,QACApE,KAAAQ,OAAAC,OAAA,cAAAT,KAAAuF,SAAAvF,KAAAoE,OAAAhE,KACMH,EAAA,EAANa,YAAAC,IAAAf,KAAAuF,SAAAvF,KAAAoE,OAAAhE,IAAAY,KAAA,UACAX,KAAA,SAAAC,GAEAP,EAAAS,OAAAC,OAAA,aAAAH,EAAAf,KAAA0B,OAEAP,MAAA,gBAIAmI,cApRA,WAqRA3C,OAAAqC,SAAA,KACArC,OAAAuC,QAAA,OC9WeK,GADElG,OAFjB,WAA0B,IAAAC,EAAA7C,KAAa8C,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBQ,OAAOuF,GAAA,UAAa/F,EAAA,OAAYgB,IAAA,OAAAd,YAAA,aAAkCF,EAAA,OAAYE,YAAA,eAAAmB,OAAkC2E,QAAA,IAAAnG,EAAA0C,SAAAjD,UAAiC,IAAAO,EAAA0C,SAAAjD,OAAAU,EAAA,OAAsCiG,aAAaC,MAAA,OAAAC,OAAA,OAAAC,SAAA,WAAAC,UAAA,QAAqExG,EAAAyG,KAAAzG,EAAAM,GAAA,KAAAH,EAAA,KAA+BE,YAAA,8BAAAM,OAAiD+F,MAAA,OAAc9F,IAAK+F,MAAA,SAAA7F,GAAyB,OAAAd,EAAAoF,iBAA0BpF,EAAAM,GAAA,KAAAH,EAAA,KAAsBE,YAAA,WAAAmB,MAAAxB,EAAA4C,OAAA,8CAAAjC,OAA6FuF,GAAA,OAAAQ,MAAA1G,EAAA4C,OAAA,WAAyChC,IAAK+F,MAAA,SAAA7F,GAAyB,OAAAd,EAAA2C,qBAA8B3C,EAAAM,GAAA,KAAAH,EAAA,KAAsBE,YAAA,+BAAAM,OAAkD+F,MAAA,OAAc9F,IAAK+F,MAAA,SAAA7F,GAAyB,OAAAd,EAAAqF,oBAA2BrF,EAAAM,GAAA,KAAAH,EAAA,OAA0BE,YAAA,iBAA2B,IAAAL,EAAA0C,SAAAjD,OAAAU,EAAA,OAAsCiG,aAAaC,MAAA,OAAAC,OAAA,OAAAC,SAAA,WAAAC,UAAA,QAAqExG,EAAAyG,KAAAzG,EAAAM,GAAA,KAAAH,EAAA,OAAiCE,YAAA,cAAwBF,EAAA,OAAYE,YAAA,MAAAM,OAAyBnC,IAAAwB,EAAAS,SAAAC,KAAAV,EAAAuC,YAAuC3B,IAAK+F,MAAA,SAAA7F,GAAyB,OAAAd,EAAA4G,WAAA5G,EAAAS,SAAAlD,WAA0CyC,EAAAM,GAAA,KAAAH,EAAA,OAAAA,EAAA,OAAoCE,YAAA,oBAA8BF,EAAA,OAAYE,YAAA,gBAA0BF,EAAA,QAAaE,YAAA,YAAAO,IAA4B+F,MAAA,SAAA7F,GAAyB,OAAAd,EAAA6G,OAAA,QAAA7G,EAAAS,SAAAlD,SAA8CyC,EAAAM,GAAAN,EAAAe,GAAAf,EAAAS,SAAAhE,MAAA,YAAAuD,EAAAM,GAAA,KAAAH,EAAA,QAAsEE,YAAA,WAAqBL,EAAAM,GAAA,MAAAN,EAAAe,GAAAf,EAAAS,SAAAO,aAAAhB,EAAAM,GAAA,KAAAH,EAAA,QAAuEE,YAAA,SAAmBL,EAAAM,GAAAN,EAAAe,GAAAf,EAAAmC,UAAA,IAAAnC,EAAAe,GAAAf,EAAAS,SAAAqG,iBAAA,cAAA9G,EAAAM,GAAA,KAAAH,EAAA,OAA2GE,YAAA,YAAsBF,EAAA,OAAYE,YAAA,eAAAO,IAA+BmG,UAAA,SAAAjG,GAA6B,OAAAd,EAAAoE,aAAAtD,EAAA,gBAA6CX,EAAA,OAAYgB,IAAA,WAAAd,YAAA,aAAsCF,EAAA,OAAYE,YAAA,eAAAO,IAA+BmG,UAAA,SAAAjG,GAA6B,OAAAd,EAAA+E,gBAAA,0BAAyC/E,EAAAM,GAAA,KAAAH,EAAA,OAAkCE,YAAA,iBAA2BF,EAAA,KAAUE,YAAA,gDAAAM,OAAmE+F,MAAA,UAAgB1G,EAAAM,GAAA,KAAAH,EAAA,KAAsBE,YAAA,wCAAAM,OAA2D+F,MAAA,QAAe9F,IAAK+F,MAAA,SAAA7F,GAAyB,OAAAd,EAAAoD,eAAwBpD,EAAAM,GAAA,KAAAH,EAAA,QAAyBS,IAAI+F,MAAA,SAAA7F,GAAyBd,EAAAqC,WAAerC,EAAAqC,SAAA,IAAoBrC,EAAAqC,SAAA,OAAqBlC,EAAA,KAAU6G,aAAavK,KAAA,OAAAwK,QAAA,SAAAC,MAAA,IAAAlH,EAAAqC,SAAA8E,WAAA,iBAAgF9G,YAAA,oCAAAM,OAAyD+F,MAAA,UAAgB1G,EAAAM,GAAA,KAAAH,EAAA,KAAsB6G,aAAavK,KAAA,OAAAwK,QAAA,SAAAC,MAAA,IAAAlH,EAAAqC,SAAA8E,WAAA,iBAAgF9G,YAAA,sCAAAM,OAA2D+F,MAAA,UAAgB1G,EAAAM,GAAA,KAAAH,EAAA,KAAsB6G,aAAavK,KAAA,OAAAwK,QAAA,SAAAC,MAAA,IAAAlH,EAAAqC,SAAA8E,WAAA,iBAAgF9G,YAAA,oCAAAM,OAAyD+F,MAAA,UAAgB1G,EAAAM,GAAA,KAAAH,EAAA,KAAsB6G,aAAavK,KAAA,OAAAwK,QAAA,SAAAC,MAAA,IAAAlH,EAAAqC,SAAA8E,WAAA,iBAAgF9G,YAAA,sCAAAM,OAA2D+F,MAAA,YAAgB1G,EAAAM,GAAA,KAAAH,EAAA,QAA2BgB,IAAA,cAAAd,YAAA,WAAAO,IAA6C+F,MAAA,SAAA7F,GAAyBd,EAAAoC,QAAApC,EAAAoC,WAAyB,GAAApC,EAAA0C,SAAAjD,OAAAU,EAAA,QAAsCE,YAAA,eAAyBL,EAAAM,GAAAN,EAAAe,GAAAf,EAAA0C,SAAAjD,WAAAO,EAAAyG,KAAAzG,EAAAM,GAAA,KAAAH,EAAA,KAAqEE,YAAA,4CAAAM,OAA+D+F,MAAA,YAAgB1G,EAAAM,GAAA,KAAAH,EAAA,QAA2BS,IAAI+F,MAAA,SAAA7F,GAAyB,OAAAd,EAAAyD,gBAAyBtD,EAAA,KAAU6G,aAAavK,KAAA,OAAAwK,QAAA,SAAAC,OAAAlH,EAAAsC,SAAA6E,WAAA,cAA0E9G,YAAA,8BAAAM,OAAmD+F,MAAA,QAAc1G,EAAAM,GAAA,KAAAH,EAAA,KAAsB6G,aAAavK,KAAA,OAAAwK,QAAA,SAAAC,MAAAlH,EAAA,SAAAmH,WAAA,aAAwE9G,YAAA,iCAAAM,OAAsD+F,MAAA,UAAc1G,EAAAM,GAAA,KAAAH,EAAA,OAA0BE,YAAA,WAAqBF,EAAA,OAAYE,YAAA,eAAAO,IAA+BmG,UAAA,SAAAjG,GAA6Bd,EAAAoE,aAAAtD,EAAA,cAAsCX,EAAA,OAAYgB,IAAA,SAAAd,YAAA,WAAAE,MAAA,SAAAP,EAAAyC,WAAA,OAAyEtC,EAAA,OAAYE,YAAA,eAAAM,OAAkC+F,MAAA1G,EAAAyC,YAAuB7B,IAAKmG,UAAA,SAAAjG,GAA6B,OAAAd,EAAA+E,gBAAA,sBAAuC/E,EAAAM,GAAA,KAAAH,EAAA,OAAgC6G,aAAavK,KAAA,OAAAwK,QAAA,SAAAC,MAAAlH,EAAA,OAAAmH,WAAA,WAAoEhG,IAAA,WAAAd,YAAA,cAAyCF,EAAA,OAAYE,YAAA,eAAyBF,EAAA,QAAAH,EAAAM,GAAA,UAAAN,EAAAM,GAAA,KAAAH,EAAA,OAAoDE,YAAA,WAAqBL,EAAAoH,GAAA,GAAApH,EAAAM,GAAA,KAAAH,EAAA,KAAgCE,YAAA,kCAAAO,IAAkD+F,MAAA,SAAA7F,GAAyBd,EAAAoC,QAAA,UAAmBpC,EAAAM,GAAA,KAAAH,EAAA,eAAoCE,YAAA,OAAAM,OAA0B0G,SAAArH,EAAA0C,SAAA4E,SAAAtH,EAAA/C,aAAmDsK,YAAAvH,EAAAwH,KAAsBnG,IAAA,OAAAoG,GAAA,WAAyB,OAAAtH,EAAA,KAAgBE,YAAA,iCAA4CqH,OAAA,QAAe,KAAA1H,EAAAM,GAAA,KAAAH,EAAA,SAAgCgB,IAAA,QAAAR,OAAmBnC,IAAAwB,EAAAwD,SAAkB5C,IAAK+G,WAAA3H,EAAAgE,WAAA4D,MAAA5H,EAAA6C,eAE/6JlB,iBADjB,WAAoC,IAAa1B,EAAb9C,KAAa+C,eAA0BC,EAAvChD,KAAuCiD,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,WAAqBF,EAAA,KAAUE,YAAA,+BAA/GlD,KAAwJmD,GAAA,KAAAH,EAAA,QAAxJhD,KAAwJmD,GAAA,eCG5L,IAcAsB,EAdyBC,EAAQ,OAcjCC,CACE/E,EACAkJ,GATF,EAXA,SAAAlE,GACEF,EAAQ,QACRA,EAAQ,SAaV,kBAEA,MAUeG,EAAA,EAAAJ,EAAiB","file":"static/js/6.6f37e00ff882d744b6e1.js","sourcesContent":["<!--  -->\n<template>\n  <div class=\"main\">\n    <div class=\"bg_mask\"></div>\n    <div class=\"bg\" :style=\"{backgroundImage: 'url('+songInfo.pic+')'}\"></div>\n    <div class=\"main_con\">\n      <!-- 列表 -->\n      <div>\n        <div>\n          <div class=\"info\">\n            <div class=\"cover_out\">\n              <img class=\"pic\" :src=\"songInfo.pic||'noimg.jpg'\" @error=\"imgError($event)\" />\n            </div>\n            <div>\n              <span class=\"title\">{{songInfo.name}}</span>\n              <p class=\"artist flex_c\">\n                <span>{{songInfo.artist}}</span>\n              </p>\n              <p class=\"song_info\">\n                <span>专辑：</span>\n                <span class=\"album_name\">{{songInfo.album}}</span>\n                <span>发行时间：</span>\n                <span class=\"time\">{{songInfo.releaseDate}}</span>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div class=\"lrc\" ref=\"lrc\">\n          <p v-for=\"i in 4\" :key=\"'before'+i\"></p>\n          <p v-for=\"(item,index) in lrcList\" :key=\"index\" :class=\"{active:isLrc===index}\">{{item.lineLyric}}</p>\n          <p v-for=\"i in 4\" :key=\"'after'+i\"></p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { HttpManager } from \"../../api\";\nimport MusicPlay from '../../components/MusicPlay.vue'\nimport MusicNoData from \"../../components/MusicNoData.vue\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: \"SongDetail\",\n  data () {\n    return {\n      code: 0,\n      status: 0,\n    };\n  },\n\n  components: {\n    MusicNoData,\n    MusicPlay\n    // MusicTable,\n    // Pagination\n  },\n\n  methods: {\n    getSongInfo () {\n      let that = this;\n      HttpManager.getSongInfo(this.$route.params.rid)\n        .then((res) => {\n          that.code = parseInt(res.code);\n          that.$store.commit('setSongInfo', res.data);\n        })\n        .catch(() => { });\n      HttpManager.getSongLrc(this.$route.params.rid)\n        .then((res) => {\n          that.status = parseInt(res.status);\n          that.$store.commit('setLrcList', res.data.lrclist);\n        })\n        .catch(() => { });\n    },\n    getSongUrl () {\n      let that = this;\n      HttpManager.getPlayUrl({ mid: this.$route.params.rid, type: 'music' })\n        .then((res) => {\n          // that.status = parseInt(res.status);\n          that.$store.commit('setSongUrl', res.data.url);\n        })\n        .catch(() => { });\n    },\n    imgError (event) {\n      event.currentTarget.src = \"https://h5static.kuwo.cn/upload/image/4f768883f75b17a426c95b93692d98bec7d3ee9240f77f5ea68fc63870fdb050.png\";\n      event.currentTarget.onerror = null;\n    }\n\n  },\n\n  computed: {\n    ...mapGetters([\n      'isLrc',\n      'lrcList',\n      'curTime',\n      'songInfo',\n    ])\n  },\n  watch: {\n    isLrc: {\n      handler (newVal, oldVal) {\n        let lrcContent = this.$refs.lrc;\n        // if (newVal > oldVal) {\n        lrcContent.scrollTop = newVal * 40;\n        // }\n      },\n      // immediate: true, //监听首次绑定值\n    },\n    curTime: {\n      handler (newVal, oldVal) {\n        for (let i = 0; i < this.lrcList.length - 1; i++) {\n          if (parseFloat(this.lrcList[i].time) <= newVal + 0.4 && parseFloat(this.lrcList[i + 1].time) >= newVal + 0.4) {\n            this.$store.commit('setIsLrc', i);\n          }\n        }\n        if (parseFloat(this.lrcList[this.lrcList.length - 1].time) <= newVal + 0.4) {\n          this.$store.commit('setIsLrc', this.lrcList.length - 1);\n        }\n      },\n      // immediate: true, //监听首次绑定值\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created () {\n    this.getSongInfo();\n    this.getSongUrl();\n    this.$store.commit('setIsPlay', false);\n  },\n\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted () { },\n}\n\n</script>\n<style lang=\"scss\" scoped>\n@import \"../../assets/css/font\";\n*,\n:after,\n:before {\n  -webkit-tap-highlight-color: transparent;\n  box-sizing: border-box;\n}\n.main {\n  margin-top: 20px;\n  padding: 0 120px;\n  display: block;\n}\n.bg_mask {\n  position: absolute;\n  top: 68px;\n  left: 0;\n  width: 100vw;\n  min-width: 990px;\n  // min-height: calc(100vh - 200px);\n  max-width: 1490px;\n  min-height: 560px;\n  height: 100%;\n  overflow: hidden;\n  background: rgba(0, 0, 0, 0.35);\n  z-index: 1;\n}\n.bg {\n  // display: block;\n  position: absolute;\n  top: 68px;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  min-height: 560px;\n  // min-height: calc(100vh - 200px);\n  min-width: 990px;\n  max-width: 1490px;\n  z-index: 0;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: 50%;\n  filter: blur(65px);\n  opacity: 0.6;\n  transform: translateZ(0);\n}\n.main_con {\n  min-width: 750px;\n  height: 100%;\n  font-size: 14px;\n  line-height: 1;\n  font-family: \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, STHeiTi,\n    sans-serif;\n  color: #fff;\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  z-index: 10;\n  .info {\n    display: flex;\n    margin: 20px;\n    border-radius: 10px;\n    box-shadow: 0 0 20px 0 rgb(255 255 255 / 20%);\n    padding: 5px;\n    .cover_out {\n      width: 100px;\n      margin-right: 20px;\n      .pic {\n        border-radius: 10px;\n        width: 100%;\n        height: 100%;\n      }\n    }\n\n    .title {\n      vertical-align: baseline;\n      display: inline-block;\n      margin: 10px 0 0;\n      height: 20px;\n      line-height: 20px;\n      font-size: 20px;\n      font-weight: 600;\n    }\n    .artist {\n      font-size: 16px;\n      height: 20px;\n      // color: #aaa;\n      line-height: 20px;\n      font-weight: 400;\n      margin-top: 10px;\n    }\n    .song_info {\n      margin-top: 10px;\n      span {\n        color: #ddd;\n      }\n      .album_name,\n      .time {\n        margin-right: 30px;\n        color: #fff;\n      }\n    }\n  }\n  .lrc {\n    overflow: auto;\n    height: 360px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    position: relative;\n    // 遮罩属性和渐变函数\n    -webkit-mask-image: linear-gradient(\n      180deg,\n      hsla(0, 0%, 100%, 0) 0,\n      hsla(0, 0%, 100%, 0.6) 15%,\n      #fff 25%,\n      #fff 75%,\n      hsla(0, 0%, 100%, 0.6) 85%,\n      hsla(0, 0%, 100%, 0)\n    );\n    mask-image: linear-gradient(\n      180deg,\n      hsla(0, 0%, 100%, 0) 0,\n      hsla(0, 0%, 100%, 0.6) 15%,\n      #fff 25%,\n      #fff 75%,\n      hsla(0, 0%, 100%, 0.6) 85%,\n      hsla(0, 0%, 100%, 0)\n    );\n    p {\n      height: 40px;\n      line-height: 40px;\n      font-size: 16px;\n      text-align: center;\n      color: #ddd;\n      &.active {\n        animation: lrcFont 0.4s forwards;\n        color: #31c27c;\n      }\n    }\n\n    //隐藏滚动条\n    scrollbar-width: none; /* firefox */\n    -ms-overflow-style: none; /* IE 10+ */\n    &::-webkit-scrollbar {\n      display: none; /* Chrome Safari */\n    }\n  }\n  .btns {\n    margin: 20px 0 20px;\n    .play {\n      width: 130px;\n      background: #31c27c;\n      color: #fff;\n      border: none;\n      &:hover {\n        color: #000;\n      }\n      &:active {\n        box-shadow: 0 0 10px 0 rgb(65 67 70 / 30%) inset;\n        border: none;\n      }\n    }\n  }\n  .list_out {\n    box-shadow: 0 0 20px 0 rgb(65 67 70 / 8%);\n  }\n}\n@keyframes lrcFont {\n  from {\n    font-size: 16px;\n  }\n  50% {\n    font-size: 17px;\n  }\n  to {\n    font-size: 18px;\n  }\n}\n\n.flex_c {\n  display: flex;\n  align-items: center;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/detail/SongDetail.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main\"},[_c('div',{staticClass:\"bg_mask\"}),_vm._v(\" \"),_c('div',{staticClass:\"bg\",style:({backgroundImage: 'url('+_vm.songInfo.pic+')'})}),_vm._v(\" \"),_c('div',{staticClass:\"main_con\"},[_c('div',[_c('div',[_c('div',{staticClass:\"info\"},[_c('div',{staticClass:\"cover_out\"},[_c('img',{staticClass:\"pic\",attrs:{\"src\":_vm.songInfo.pic||'noimg.jpg'},on:{\"error\":function($event){return _vm.imgError($event)}}})]),_vm._v(\" \"),_c('div',[_c('span',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.songInfo.name))]),_vm._v(\" \"),_c('p',{staticClass:\"artist flex_c\"},[_c('span',[_vm._v(_vm._s(_vm.songInfo.artist))])]),_vm._v(\" \"),_c('p',{staticClass:\"song_info\"},[_c('span',[_vm._v(\"专辑：\")]),_vm._v(\" \"),_c('span',{staticClass:\"album_name\"},[_vm._v(_vm._s(_vm.songInfo.album))]),_vm._v(\" \"),_c('span',[_vm._v(\"发行时间：\")]),_vm._v(\" \"),_c('span',{staticClass:\"time\"},[_vm._v(_vm._s(_vm.songInfo.releaseDate))])])])])]),_vm._v(\" \"),_c('div',{ref:\"lrc\",staticClass:\"lrc\"},[_vm._l((4),function(i){return _c('p',{key:'before'+i})}),_vm._v(\" \"),_vm._l((_vm.lrcList),function(item,index){return _c('p',{key:index,class:{active:_vm.isLrc===index}},[_vm._v(_vm._s(item.lineLyric))])}),_vm._v(\" \"),_vm._l((4),function(i){return _c('p',{key:'after'+i})})],2)])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d8452fa8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/detail/SongDetail.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-d8452fa8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SongDetail.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SongDetail.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SongDetail.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d8452fa8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SongDetail.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-d8452fa8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/detail/SongDetail.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"play\">\n    <div class=\"play_bar\" ref=\"play\">\n      <!-- 播放、上一首、下一首 -->\n      <div class=\"col_l flex_c\" :class=\"{no_list:playList.length===0}\">\n        <div style=\"width:100%;height:100%; position: absolute;z-index:10\" v-if=\"playList.length===0\"></div>\n        <i title=\"上一首\" class=\"iconfont icon-bar_icon_pre_\" @click=\"getPreSong()\"></i>\n        <i id='play' :title=\"isPlay?'暂停':'播放'\" class=\"iconfont\" :class=\"isPlay?'icon-bar_icon_pause_':'icon-bar_icon_play_1'\" @click=\"setPlayOrPause()\"></i>\n        <i title=\"下一首\" class=\"iconfont icon-bar_icon_next_\" @click=\"getNextSong()\"></i>\n      </div>\n      <div class=\"col_c flex_c\">\n        <div style=\"width:100%;height:100%; position: absolute;z-index:10\" v-if=\"playList.length===0\"></div>\n        <div class=\"cover_out\">\n          <img class=\"pic\" :src=\"songInfo.pic||defaultImg\" @click=\"goPlayPage(songInfo.rid)\" />\n        </div>\n        <!-- 歌曲信息 -->\n        <div>\n          <div class=\"songInfo flex_c\">\n            <div class=\"info flex_c\">\n              <span class=\"song_name\" @click=\"goPage('music',songInfo.rid)\">{{songInfo.name||'Music'}}</span>\n              <span class=\"artist\"> - {{songInfo.artist}}</span>\n            </div>\n            <span class=\"time\">{{playTime}}/{{songInfo.songTimeMinutes||'00:00'}}</span>\n          </div>\n          <!-- 播放条 -->\n          <div class=\"process\">\n            <div class=\"progress_bar\" @mousedown=\"progressMove($event,'progress')\">\n              <div class=\"progress\" ref='progress'>\n                <div class=\"progress_btn\" @mousedown=\"progressBtnMove('progress')\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- 控制面板 -->\n      <div class=\"col_r flex_c\">\n        <i title=\"收藏歌曲\" class=\"prev icon_heart iconfont icon-bar_icon_heart_\"></i>\n        <i title=\"下载歌曲\" class=\"prev iconfont icon-bar_icon_download_\" @click=\"download()\"></i>\n        <span @click=\"playMode++;if(playMode>3) playMode=0;\">\n          <i title=\"循环播放\" class=\"prev iconfont icon-bar_icon_loop_\" v-show=\"playMode===0\"></i>\n          <i title=\"单曲循环\" class=\"prev iconfont icon-bar_icon_repeat_\" v-show=\"playMode===1\"></i>\n          <i title=\"顺序播放\" class=\"prev iconfont icon-bar_icon_list_\" v-show=\"playMode===2\"></i>\n          <i title=\"随机播放\" class=\"prev iconfont icon-bar_icon_random_\" v-show=\"playMode===3\"></i>\n        </span>\n        <span class=\"playList\" @click=\"isShow=!isShow\" ref=\"playListBtn\">\n          <span class=\"play_count\" v-if=\"playList.length!=0\">{{playList.length}}</span>\n          <i title=\"歌曲列表\" class=\"prev iconfont icon-bar_icon_playlistfuzhi\"></i>\n        </span>\n        <span @click=\"setVolume()\">\n          <i title=\"静音\" class=\"iconfont icon-bar_icon_mute\" v-show=\"!isVolume\"></i>\n          <i title=\"音量\" class=\"iconfont icon-bar_icon_volume_\" v-show=\"isVolume\"></i>\n        </span>\n        <div class=\"volume\">\n          <div class=\"progress_bar\" @mousedown=\"progressMove ($event, 'volume')\">\n            <div class=\"progress\" ref='volume' :style=\"'width:'+realVolume+'px'\">\n              <div class=\"progress_btn\" @mousedown=\"progressBtnMove('volume')\" :title=\"realVolume\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 播放列表 -->\n      <div class=\"play_list\" v-show=\"isShow\" ref=\"playList\">\n        <div class=\"top flex_c\">\n          <span>播放列表</span>\n          <div class=\"flex_c\">\n            <div class=\"flex_c\">\n              <i class=\"iconfont icon-list_clean_n\"></i>\n              <span>清空列表</span>\n            </div>\n            <i class=\"close iconfont icon-list_icon_x\" @click=\"isShow=false\"></i>\n          </div>\n        </div>\n        <music-table :songList=\"playList\" :playFunc=\"getSongInfo\" class=\"list\">\n          <template v-slot:opts>\n            <i class=\"iconfont icon-list_clean_n\"></i>\n          </template>\n        </music-table>\n\n      </div>\n    </div>\n    <audio ref=\"audio\" :src=\"songUrl\" @timeupdate=\"timeUpdate\" @ended=\"audioEnd\"></audio>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { HttpManager } from '../api';\nimport mixin from '../mixins';\nimport Storage from '../storage'\nimport MusicTable from './MusicTable.vue';\nexport default {\n  components: { MusicTable },\n  name: \"MusicPlay\",\n  mixins: [mixin],\n  data () {\n    return {\n      // isPlay: false, // 是否播放\n      playTime: '00:00',\n      isShow: false,\n      playMode: 0,\n      isVolume: true,\n      defaultImg: require('../assets/img/default_img.png'),\n      tempVolume: 0,\n      realVolume: 50,\n      playList: [],\n      index: 0,\n    }\n  },\n  created () {\n\n  },\n  methods: {\n    setPlayOrPause () {\n      this.$store.commit('setIsPlay', !this.isPlay);\n      // this.isPlay = !this.isPlay;\n      // this.isPlay ? audio.play() : audio.pause();\n    },\n    // 音频停止后, 把喇叭置灰\n    audioEnd () {\n      // this.isPlay = false;\n      // this.$refs.audio.currentTime = 0;\n      // this.$store.commit('setCurTime', 0);\n      this.index = Storage.getLocalStorage('play_song_index');\n      switch (this.playMode) {\n        // 循环播放\n        case 0:\n          this.index += 1;\n          if (this.index >= this.playList.length) {\n            this.index = 0;\n          }\n          this.getSongInfo(this.index);\n          break;\n        // 单曲循环\n        case 1: this.getSongInfo(this.index); break;\n        // 顺序播放\n        case 2:\n          this.index += 1;\n          if (this.index >= this.playList.length) {\n            this.index = this.playList.length - 1;\n            this.$store.commit('setIsPlay', false);\n          }\n          break;\n        // 随机播放\n        case 3:\n          //Math.floor()向下取整，随机0-(this.playList.length-1)\n          this.index = Math.floor(Math.random() * this.playList.length);\n          this.getSongInfo(this.index);\n          break;\n        default: break;\n      }\n      Storage.setLocalStorage('play_song_index', this.index);\n      // this.$store.commit('setIsPlay', false);\n    },\n    download () {\n      // 当前页面打开资源链接，浏览器会自动下载\n      window.location.href = this.songUrl;\n    },\n    setVolume () {\n      let audio = this.$refs.audio;\n      this.isVolume = !this.isVolume;\n      if (!this.isVolume) {\n        this.tempVolume = Storage.getLocalStorage('volume');\n        this.realVolume = 0;\n        Storage.setLocalStorage('volume', 0);\n      }\n      else {\n        this.realVolume = this.tempVolume;\n        Storage.setLocalStorage('volume', this.tempVolume);\n      }\n      audio.volume = this.realVolume * (1 / 100);\n    },\n    floatToTime (val) {\n      let min = (val / 60) | 0;\n      let sec = (val % 60) | 0;\n      let time;\n      if (min < 10) {\n        time = '0' + min + ':';\n      } else {\n        time = min + ':';\n      }\n      if (sec < 10) {\n        time += '0' + sec;\n      } else {\n        time += sec;\n      }\n      return time;\n    },\n    timeUpdate () {\n      let audio = this.$refs.audio;\n      this.playTime = this.floatToTime(audio.currentTime);\n      audio.volume = this.realVolume * (1 / 100);\n      //设置进度条位置\n      this.$refs.progress.style = `width:${audio.currentTime / (audio.duration / 340)}px`;\n      this.$store.commit('setCurTime', audio.currentTime)\n      //重置歌词位置，播放时间不能直接判断等于0，触发事件时，播放时间一般大于0\n      if (audio.currentTime <= 1)\n        this.$store.commit('setIsLrc', 0);\n    },\n\n    //点击进度条，设置进度\n    progressMove (event, type) {\n      let scrollx = document.documentElement.scrollLeft || document.body.scrollLeft;\n      let audio = this.$refs.audio;\n\n      if (type === 'volume') {\n        let x = event.clientX + scrollx - this.$refs.volume.getBoundingClientRect().left\n        //设置播放时间\n        audio.volume = x * (1 / 100);\n        this.realVolume = x | 0;\n        Storage.setLocalStorage('volume', this.realVolume);\n        this.$refs.volume.style = `width:${x}px`;\n      }\n      if (type === 'progress') {\n        let x = event.clientX + scrollx - this.$refs.progress.getBoundingClientRect().left\n        //设置播放时间\n        audio.currentTime = x * (audio.duration / 340);\n      }\n      // this.playTime = this.floatToTime(audio.currentTime);\n      // this.$refs.progress.style = `width:${x}px`;\n    },\n    //拖动进度按钮设置进度\n    progressBtnMove (type) {\n      let that = this;\n      let scrollx = document.documentElement.scrollLeft || document.body.scrollLeft;\n      //getBoundingClientRect()返回类型DOMRect对象,包括元素大小、左上角坐标和相对浏览器视窗的距离\n      // right是指元素右边界距窗口最左边的距离，bottom是指元素下边界距窗口最上面的距离\n      // let left = that.$refs.progress.getBoundingClientRect().left\n      let audio = that.$refs.audio;\n      document.onmousemove = (event) => {\n        if (type === 'volume') {\n          let x = event.clientX + scrollx - this.$refs.volume.getBoundingClientRect().left\n          if (x > 100) {\n            x = 100;\n          } else if (x < 0) {\n            x = 0;\n          }\n          //设置播放音量\n          audio.volume = x * (1 / 100);\n          this.realVolume = x | 0;\n          Storage.setLocalStorage('volume', this.realVolume);\n          this.$refs.volume.style = `width:${x}px`;\n        }\n        if (type === 'progress') {\n          let x = event.clientX + scrollx - this.$refs.progress.getBoundingClientRect().left\n          if (x > 340) {\n            x = 340;\n          } else if (x < 0) {\n            x = 0;\n          }\n          //设置播放时间\n          audio.currentTime = x * (audio.duration / 340);\n        }\n        // that.playTime = that.floatToTime(audio.currentTime);\n        // that.$refs.progress.style = `width:${x}px`;\n      }\n      document.onmouseup = (event) => {\n        document.onmousemove = null;\n        document.onmouseup = null;\n      }\n    },\n    // 获取列表中歌曲信息且不改变歌曲顺序\n    getSongInfo (index) {\n      let that = this;\n      //暂停播放\n      this.$store.commit('setIsPlay', false);\n      this.$store.commit('setSongInfo', Storage.getLocalStorage('song_list')[index]);\n      this.$store.commit('setPlaySong', this.playList[index].rid);\n      HttpManager.getPlayUrl({ mid: Storage.getLocalStorage('song_list')[index].rid, type: 'music' })\n        .then((res) => {\n          // that.status = parseInt(res.status);\n          that.$store.commit('setSongUrl', res.data.url);\n          that.$store.commit('setIsPlay', true);\n        })\n        .catch(() => { });\n    },\n    getPreSong () {\n      this.index = Storage.getLocalStorage('play_song_index') || 0;\n      // 只有随机播放对上下首歌曲切换有影响\n      if (this.playMode === 3) {\n        //Math.floor()向下取整，随机0-(this.playList.length-1)\n        this.index = Math.floor(Math.random() * this.playList.length);\n      } else {\n        this.index -= 1;\n        if (this.index < 0)\n          this.index = this.playList.length - 1;\n      }\n      Storage.setLocalStorage('play_song_index', this.index);\n      this.getSongInfo(this.index);\n    },\n    getNextSong () {\n      this.index = Storage.getLocalStorage('play_song_index') || 0;\n      if (this.playMode === 3) {\n        //Math.floor()向下取整，随机0-(this.playList.length-1)\n        this.index = Math.floor(Math.random() * this.playList.length);\n      } else {\n        this.index += 1;\n        if (this.index >= this.playList.length)\n          this.index = 0;\n      }\n      Storage.setLocalStorage('play_song_index', this.index);\n      this.getSongInfo(this.index);\n    },\n  },\n  computed: {\n    ...mapGetters([\n      'songInfo',\n      'songUrl',\n      'isPlay',\n    ])\n  },\n  watch: {\n    isPlay: {\n      handler (newVal, oldVal) {\n        let audio = this.$refs.audio;\n        // console.log(newVal);\n        if (newVal === true) {\n          //加载歌曲\n          // audio.load();\n          //等歌曲加载后播放\n          setTimeout(() => {\n            audio.play();\n          }, 200);\n        } else\n          audio.pause();\n        // 刷新播放列表\n        this.playList = Storage.getLocalStorage('song_list');\n      }\n    },\n  },\n  mounted () {\n    let that = this;\n    // 固定在底部的播放栏随滚动条滚动\n    window.onscroll = () => {\n      let sl = -(document.documentElement.scrollLeft || document.body.scrollLeft);\n      that.$refs.play.style.left = sl + 'px';\n    }\n    window.onclick = (event) => {\n      // 如果在播放列表和按钮外点击，则隐藏播放列表\n      if (!this.$refs.playList.contains(event.target) && !this.$refs.playListBtn.contains(event.target)) {\n        this.isShow = false;\n      }\n    }\n    this.$store.commit('setIsPlay', false);\n    if (Storage.getLocalStorage('volume') === null)\n      Storage.setLocalStorage('volume', 50);//设置默认音量\n    this.$refs.audio.volume = Storage.getLocalStorage('volume') * (1 / 100);\n    this.realVolume = Storage.getLocalStorage('volume');\n    if (Storage.getLocalStorage('play_song_index') != null) {\n      this.index = Storage.getLocalStorage('play_song_index');\n    } else {\n      Storage.setLocalStorage('play_song_index', 0);\n    }\n    if (Storage.getLocalStorage('song_list') != null) {\n      // 获取播放列表\n      this.playList = Storage.getLocalStorage('song_list');\n      this.$store.commit('setSongInfo', this.playList[this.index]);\n      this.$store.commit('setPlaySong', this.playList[this.index].rid);\n      HttpManager.getPlayUrl({ mid: this.playList[this.index].rid, type: 'music' })\n        .then((res) => {\n          // that.status = parseInt(res.status);\n          that.$store.commit('setSongUrl', res.data.url);\n        })\n        .catch(() => { });\n    }\n\n  },\n  beforeDestroy () {//注意：监听的函数要在关闭页面时销毁掉,不然会影响到其它页面\n    window.onscroll = null;\n    window.onclick = null;\n  },\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../assets/css/font\";\nspan {\n  display: block;\n  color: #333;\n}\n.iconfont {\n  color: #333;\n  font-size: 24px;\n}\n.play_bar {\n  -webkit-user-select: none;\n  -webkit-text-size-adjust: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n\n  position: fixed;\n  bottom: 0;\n  z-index: 50;\n  width: 100%;\n  min-width: 990px;\n  max-width: 1490px;\n  height: 70px;\n  background: rgba(250, 250, 254, 0.96);\n  padding: 0 120px;\n  display: flex;\n  justify-content: space-between;\n  .play_list {\n    position: absolute;\n    right: 14%;\n    bottom: 80px;\n    width: 512px;\n    background: #fff;\n    padding: 34px 0 20px;\n    box-shadow: 0 4px 20px 0 rgb(65 67 70 / 8%);\n\n    .list {\n      height: 256px;\n      padding: 5px;\n    }\n  }\n  .col_l {\n    position: relative;\n    width: 200px;\n    i {\n      margin: 0 20px;\n    }\n    #play {\n      &.iconfont {\n        font-size: 40px;\n      }\n    }\n    &.no_list .iconfont {\n      color: #999;\n      :hover {\n        color: #999;\n      }\n    }\n  }\n  .col_c {\n    position: relative;\n    width: 440px;\n    .cover_out {\n      height: 70px;\n      width: 100px;\n      // padding: 5px;\n      padding: 0 15px;\n      .pic {\n        width: 100%;\n        height: 100%;\n      }\n    }\n    .songInfo {\n      width: 340px;\n      font-size: 14px;\n      margin-bottom: 10px;\n      .info {\n        width: 260px;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        .artist {\n          color: #666;\n        }\n      }\n      .time {\n        color: #999;\n      }\n    }\n    .process {\n      width: 340px;\n    }\n  }\n  .col_r {\n    position: relative;\n    width: 360px;\n    margin-left: 20px;\n    i {\n      margin: 0 10px;\n    }\n    .iconfont {\n      font-size: 18px;\n    }\n    .playList {\n      position: relative;\n      .play_count {\n        position: absolute;\n        text-align: center;\n        top: -4px;\n        left: 18px;\n        padding: 0 2px;\n        font-size: 12px;\n        // background: #fff;\n        cursor: pointer;\n      }\n    }\n    .volume {\n      margin-left: 10px;\n      width: 100px;\n    }\n  }\n}\n.progress_bar {\n  position: relative;\n  width: 100%;\n  height: 3px;\n  background: rgba(0, 0, 0, 0.05);\n  border-radius: 2px;\n  cursor: pointer;\n  .progress {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: #31c27c;\n    height: 3px;\n    // width: 10px;\n    border-radius: 2px;\n  }\n  .progress_btn {\n    position: absolute;\n    z-index: 10;\n    right: -8px;\n    width: 12px;\n    height: 12px;\n    top: -4px;\n    background: #fff;\n    box-shadow: 0 0 15px 0 rgb(0 0 0 / 15%);\n    border-radius: 50%;\n    &:after {\n      position: absolute;\n      content: \"\";\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 4px;\n      height: 4px;\n      background: #31c27c;\n      border-radius: 50%;\n    }\n  }\n}\n.flex_c {\n  display: flex;\n  align-items: center;\n}\n</style>\n<style lang ='scss'>\n.play_list {\n  .list {\n    .song_list {\n      height: 200px;\n      overflow: auto;\n      // 隐藏滚动条\n      scrollbar-width: none; /* firefox */\n      -ms-overflow-style: none; /* IE 10+ */\n      &::-webkit-scrollbar {\n        display: none; /* Chrome Safari */\n      }\n      .song_item {\n        height: 45px !important;\n        .song_opts {\n          width: 120px !important;\n        }\n      }\n    }\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/MusicPlay.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"play\"}},[_c('div',{ref:\"play\",staticClass:\"play_bar\"},[_c('div',{staticClass:\"col_l flex_c\",class:{no_list:_vm.playList.length===0}},[(_vm.playList.length===0)?_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\",\"position\":\"absolute\",\"z-index\":\"10\"}}):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"iconfont icon-bar_icon_pre_\",attrs:{\"title\":\"上一首\"},on:{\"click\":function($event){return _vm.getPreSong()}}}),_vm._v(\" \"),_c('i',{staticClass:\"iconfont\",class:_vm.isPlay?'icon-bar_icon_pause_':'icon-bar_icon_play_1',attrs:{\"id\":\"play\",\"title\":_vm.isPlay?'暂停':'播放'},on:{\"click\":function($event){return _vm.setPlayOrPause()}}}),_vm._v(\" \"),_c('i',{staticClass:\"iconfont icon-bar_icon_next_\",attrs:{\"title\":\"下一首\"},on:{\"click\":function($event){return _vm.getNextSong()}}})]),_vm._v(\" \"),_c('div',{staticClass:\"col_c flex_c\"},[(_vm.playList.length===0)?_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\",\"position\":\"absolute\",\"z-index\":\"10\"}}):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"cover_out\"},[_c('img',{staticClass:\"pic\",attrs:{\"src\":_vm.songInfo.pic||_vm.defaultImg},on:{\"click\":function($event){return _vm.goPlayPage(_vm.songInfo.rid)}}})]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"songInfo flex_c\"},[_c('div',{staticClass:\"info flex_c\"},[_c('span',{staticClass:\"song_name\",on:{\"click\":function($event){return _vm.goPage('music',_vm.songInfo.rid)}}},[_vm._v(_vm._s(_vm.songInfo.name||'Music'))]),_vm._v(\" \"),_c('span',{staticClass:\"artist\"},[_vm._v(\" - \"+_vm._s(_vm.songInfo.artist))])]),_vm._v(\" \"),_c('span',{staticClass:\"time\"},[_vm._v(_vm._s(_vm.playTime)+\"/\"+_vm._s(_vm.songInfo.songTimeMinutes||'00:00'))])]),_vm._v(\" \"),_c('div',{staticClass:\"process\"},[_c('div',{staticClass:\"progress_bar\",on:{\"mousedown\":function($event){return _vm.progressMove($event,'progress')}}},[_c('div',{ref:\"progress\",staticClass:\"progress\"},[_c('div',{staticClass:\"progress_btn\",on:{\"mousedown\":function($event){return _vm.progressBtnMove('progress')}}})])])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col_r flex_c\"},[_c('i',{staticClass:\"prev icon_heart iconfont icon-bar_icon_heart_\",attrs:{\"title\":\"收藏歌曲\"}}),_vm._v(\" \"),_c('i',{staticClass:\"prev iconfont icon-bar_icon_download_\",attrs:{\"title\":\"下载歌曲\"},on:{\"click\":function($event){return _vm.download()}}}),_vm._v(\" \"),_c('span',{on:{\"click\":function($event){_vm.playMode++;if(_vm.playMode>3) { _vm.playMode=0; }}}},[_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.playMode===0),expression:\"playMode===0\"}],staticClass:\"prev iconfont icon-bar_icon_loop_\",attrs:{\"title\":\"循环播放\"}}),_vm._v(\" \"),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.playMode===1),expression:\"playMode===1\"}],staticClass:\"prev iconfont icon-bar_icon_repeat_\",attrs:{\"title\":\"单曲循环\"}}),_vm._v(\" \"),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.playMode===2),expression:\"playMode===2\"}],staticClass:\"prev iconfont icon-bar_icon_list_\",attrs:{\"title\":\"顺序播放\"}}),_vm._v(\" \"),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.playMode===3),expression:\"playMode===3\"}],staticClass:\"prev iconfont icon-bar_icon_random_\",attrs:{\"title\":\"随机播放\"}})]),_vm._v(\" \"),_c('span',{ref:\"playListBtn\",staticClass:\"playList\",on:{\"click\":function($event){_vm.isShow=!_vm.isShow}}},[(_vm.playList.length!=0)?_c('span',{staticClass:\"play_count\"},[_vm._v(_vm._s(_vm.playList.length))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"prev iconfont icon-bar_icon_playlistfuzhi\",attrs:{\"title\":\"歌曲列表\"}})]),_vm._v(\" \"),_c('span',{on:{\"click\":function($event){return _vm.setVolume()}}},[_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isVolume),expression:\"!isVolume\"}],staticClass:\"iconfont icon-bar_icon_mute\",attrs:{\"title\":\"静音\"}}),_vm._v(\" \"),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isVolume),expression:\"isVolume\"}],staticClass:\"iconfont icon-bar_icon_volume_\",attrs:{\"title\":\"音量\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"volume\"},[_c('div',{staticClass:\"progress_bar\",on:{\"mousedown\":function($event){_vm.progressMove ($event, 'volume')}}},[_c('div',{ref:\"volume\",staticClass:\"progress\",style:('width:'+_vm.realVolume+'px')},[_c('div',{staticClass:\"progress_btn\",attrs:{\"title\":_vm.realVolume},on:{\"mousedown\":function($event){return _vm.progressBtnMove('volume')}}})])])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShow),expression:\"isShow\"}],ref:\"playList\",staticClass:\"play_list\"},[_c('div',{staticClass:\"top flex_c\"},[_c('span',[_vm._v(\"播放列表\")]),_vm._v(\" \"),_c('div',{staticClass:\"flex_c\"},[_vm._m(0),_vm._v(\" \"),_c('i',{staticClass:\"close iconfont icon-list_icon_x\",on:{\"click\":function($event){_vm.isShow=false}}})])]),_vm._v(\" \"),_c('music-table',{staticClass:\"list\",attrs:{\"songList\":_vm.playList,\"playFunc\":_vm.getSongInfo},scopedSlots:_vm._u([{key:\"opts\",fn:function(){return [_c('i',{staticClass:\"iconfont icon-list_clean_n\"})]},proxy:true}])})],1)]),_vm._v(\" \"),_c('audio',{ref:\"audio\",attrs:{\"src\":_vm.songUrl},on:{\"timeupdate\":_vm.timeUpdate,\"ended\":_vm.audioEnd}})])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flex_c\"},[_c('i',{staticClass:\"iconfont icon-list_clean_n\"}),_vm._v(\" \"),_c('span',[_vm._v(\"清空列表\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3c0e3d8b\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/MusicPlay.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3c0e3d8b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./MusicPlay.vue\")\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3c0e3d8b\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=1!./MusicPlay.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./MusicPlay.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./MusicPlay.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3c0e3d8b\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./MusicPlay.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3c0e3d8b\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/MusicPlay.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}